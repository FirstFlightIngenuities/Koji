<!DOCTYPE html>
<html>
<title></title>
<head>
</head>
<body>
<h1>Welcome#index</h1>
<button onclick="getGame()">Start a new game</button>
<div id="root" style="text-align: center; margin: auto">
	<div style="width:500px;height:50px;margin:auto"><h1 id="you_won"></h1></div>
	<div id="answer" style="width:300px;height:300px;border:1px solid gray;text-align:center; margin: auto">
		<div id="guess" style="width:100px;height:100px;border:5px solid black;text-align:center; margin: auto; margin-top:100px;background-color: white;transition: border 0.5s;-webkit-transition: border 0.5s"></div>
	</div>

	<div><p>This is your palette: (Click on one of the ends below, then click on one of the colors in this palette to add it to that end)</p></div>
	<div id="palette"></div>
	<div id="ends">
		<div id="end1" style="width:100px;height:100px;border:1px solid gray;display:inline-block" onclick="makeSelectedDiv(this)"><p>I am end 1</p></div>
		<div id="end2" style="width:100px;height:100px;border:1px solid gray;display:inline-block" onclick="makeSelectedDiv(this)"><p>I am end 2</p></div>
	</div>
</div>
</body>
<script>
		answerRes = null;
		selectedDiv = null;
		gradientSteps = null;
		
		function getGame() {
			var csrfTok = document.querySelector("meta[name='csrf-token']").getAttribute("content");
			var xhttp = new XMLHttpRequest();
			xhttp.open("POST", "/games");
			xhttp.setRequestHeader('X-CSRF-Token', csrfTok)
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					answerRes = JSON.parse(this.responseText);
					gradientSteps = answerRes.gradientSteps;
					console.log("the answer palette choices are:");
					console.log(answerRes.answer.ends);
					colorAnswerDiv(answerRes);
					createPalette(answerRes);
				} // end if
			} // end onreadystatechange
			xhttp.send();
		} // end function getGame()

		function addColorsToPage(colorsArr) {
			var ends = document.getElementById("ends");
			var frag = document.createDocumentFragment();
			for (var i = 0; i < colorsArr.length; i++) {
				var divTemp = document.createElement('div');
				divTemp.style.width = "100px";
				divTemp.style.height = "100px";
				divTemp.style.border = "1px solid gray";
				divTemp.style.display = "inline-block";
				divTemp.style.backgroundColor = colorsArr[i];
				divTemp.id = colorsArr[i];
				divTemp.onclick = function() {checkGuess(this);}
				frag.appendChild(divTemp);
			}
			ends.style.display = "none";
			end2 = document.getElementById("end2");
			while(!!end2.previousSibling && end2.previousSibling.id != "end1") ends.removeChild(end2.previousSibling);
			
			ends.insertBefore(frag, end2);
			ends.style.display = "block";
			return true;
		}

		function createPalette(ans) {
			var palette = document.getElementById("palette");
			colorsArr = [];
			colorsArr.push(ans.answer.ends[0]);
			colorsArr.push(ans.answer.ends[1]);
			otherEnds = ans.otherEnds;
			for (var i = 0; i < otherEnds.length; i++) {colorsArr.push(otherEnds[i][0]); colorsArr.push(otherEnds[i][1]);}
			var frag = document.createDocumentFragment();
			for (var i = 0; i < colorsArr.length; i++) {
				var divTemp = document.createElement('div');
				divTemp.style.width = "100px";
				divTemp.style.height = "100px";
				divTemp.style.border = "1px solid gray";
				divTemp.style.display = "inline-block";
				divTemp.style.backgroundColor = colorsArr[i];
				divTemp.id = colorsArr[i];
				divTemp.onclick = function() {selectColorForEnd(this);}
				frag.appendChild(divTemp);
			}
			palette.style.display = "none";
			while(palette.firstChild) palette.removeChild(palette.firstChild);
			palette.appendChild(frag);
			palette.style.display = "block";
		}

		function colorAnswerDiv(ans) {
			answerDiv = document.getElementById("answer");
			answerDiv.style.display = "none";
			answerDiv.style.backgroundColor = ans.answer.selectedColor;
			answerDiv.style.display = "block";
		}

		function makeSelectedDiv(divS) {
			if (!selectedDiv) {
				selectedDiv = divS;
				divS.style.border = "5px solid black";
			}
			else if (selectedDiv === divS) {
				selectedDiv = null;
				divS.style.border = "1px solid gray";
			}
			else {
				selectedDiv.style.border = "1px solid gray";
				selectedDiv = divS;
				selectedDiv.style.border = "5px solid black";
			}
		} // end function makeSelectedDiv(divS)

		function selectColorForEnd(choice) {
			var bkColor = choice.style.backgroundColor;
			end1 = document.getElementById("end1");
			end2 = document.getElementById("end2");
			if (!!selectedDiv) {
				selectedDiv.style.backgroundColor = bkColor;
				selectedDiv.style.border = "1px solid gray";
				selectedDiv = null;
				if (!!end1.style.backgroundColor && !!end2.style.backgroundColor) createGradient(gradientSteps);
			}
			return true;
		} // end function selectColorForEnd(choice)

		function createGradient(steps) {
			end1 = document.getElementById("end1");
			end2 = document.getElementById("end2");
			color1 = getRGBComponents(end1.style.backgroundColor);
			color2 = getRGBComponents(end2.style.backgroundColor);
			gradient = [];
			alpha = 0.0;
			for (var i = 0; i < steps; i++) {
				slice = [];
				alpha = alpha + (1.0/steps);
				slice[0] = Math.floor(color1[0] * alpha + (1-alpha) * color2[0]);
				slice[1] = Math.floor(color1[1] * alpha + (1-alpha) * color2[1]);
				slice[2] = Math.floor(color1[2] * alpha + (1-alpha) * color2[2]);
				
				slice[0] = slice[0].toString(16);
				if (slice[0].length == 1) slice[0] = "0" + slice[0];
				slice[1] = slice[1].toString(16);
				if (slice[1].length == 1) slice[1] = "0" + slice[1];
				slice[2] = slice[2].toString(16);
				if (slice[2].length == 1) slice[2] = "0" + slice[2];
				
				hex = "#" +  slice[0] + slice[1] + slice[2];
				gradient.push(hex);
			}
			return addColorsToPage(gradient.reverse());
		} // end function createGradient(steps)

		function getRGBComponents(color) {
			color = color.replace("rgb(","");
			color = color.replace(")","");
			var colorArr = color.split(",");
			return colorArr;
		} // end function getRGBComponents(color)

		function checkGuess(col) {
			color = col.id;
			wonDiv = document.getElementById("you_won");
			guessDiv = document.getElementById("guess");
			guessDiv.style.backgroundColor = color
			
			answer = answerRes.answer.selectedColor;
			console.log("this is answer: " + answer + " and this is your guess: "+ color)
			if (answer.toUpperCase() === color.toUpperCase()) {wonDiv.style.display = "none"; wonDiv.innerHTML = "YOU WON!!!"; wonDiv.style.display = "block"; guessDiv.style.border = "0px solid gray";}
			return true;
		} // end function checkGuess(col)
	</script>	
</html>
