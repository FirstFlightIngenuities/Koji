<!DOCTYPE html>
<html style="height:100%">
<title></title>
<head>
</head>
<body style="width:100%;height:100%; padding: 0px;margin: 0">
<h1 style="width:100%;height:1em; padding:0.1em;text-align: center;background-color: gray;font-size:4em; margin-top: 0px; color:white; box-shadow: 6px 6px 6px #aaaaaa; z-index:4">KO<span style="color:blue">J</span><span style="color:green">I</span></h1>
<div id="root" style="position:relative;margin: auto; width:100%;height:100%; text-align: center">
	<div style="position:relative;width:50%; height:40%;overflow: hidden; margin:auto; font-family: verdana, geneva, sans-serif; ">
		<canvas id="canvas1" style="position:absolute;width:100%;height:100%;display:none;text-align:center"></canvas>
		<div id="overlayMessageContainer" style="position:absolute;width:100%;height:100%;display:none;text-align:center; background-color:lightgray; opacity:0.75;"><p id="overlayMessageSpan" style="margin-top:3em;font-size:4em;font-family: verdana, geneva, sans-serif"></p></div>
		<div id="timer" style="position:absolute; width:4em; padding:0.5em; background-color:lightgray; opacity:0.75; text-align:center; font-size:3em; margin-top:0px; left: 50%; margin-left: -2.5em; box-shadow: 0px 4px 6px #aaaaaa"></div>
		<div id="answer" style="width:100%;height:50%; margin: auto; margin-top: 0px; margin-bottom: 0px; min-height: 100px; background-color: #eef0f6;font-size: 0"></div>
		<div id="guess" style="width:100%;height:50%; margin: auto; margin-top: 0px; min-height: 100px; background-color: #eef0f6;background-image: url('transparent_background.jpg');box-shadow: inset 2px 2px 10px #aaaaaa;font-size:0;transition: border 0.5s;-webkit-transition: border 0.5s"></div>
	</div>

	<div id="sliderContainer" style="width:100%; margin:auto;">
		<input type="range" min="0" max="100" value="50" style="width:50%;margin:auto;" id="customScroll">
	</div>
	<div id="letterChoicesCont"></div>
	<div id="gameLettersDiv" style="width:100%, height:0px; display:none; margin: auto; text-align:center"></div>
	<div style="position:relative;width:100%; height:40%;overflow: hidden; margin:auto; font-family: verdana, geneva, sans-serif; ">
		<div id="end1" style="z-index:3;width:150px;height:150px;border:1px solid gray;display:inline-block; font-size:2em; box-shadow: -1px 4px 3px #aaaaaa" onclick="makeSelectedDiv(this)"><p>Color 1</p></div>
		
		<div id="end2" style="z-index:3;width:150px;height:150px;border:1px solid gray;display:inline-block;font-size:2em;box-shadow: -1px 4px 3px #aaaaaa" onclick="makeSelectedDiv(this)"><p>Color 2</p></div>
	</div>

	<div id="endsPaletteContainer" style="position:absolute;width:100%;height:100%;background-color:ghostwhite;z-index:2;display:none; text-align:center; font-size: 1.2em">
		<p>These are your color choices: (pick two colors where the resulting in-between color will match your goal)</p>
		<div id="palette" style="width:100%;text-align: center"></div>
	</div>
	<div style="position:relative;width:100%;overflow: hidden; font-family: verdana, geneva, sans-serif; ">
		<div style="width:100%;text-align: center; font-size:2em;overflow:hidden; white-space:nowrap">
			<p style="display:inline-block; width:30%"><span>Earned: </span><span id="stars_count">0</span><img style="vertical-align:middle" src="star.png"></p>
			<p style="display:inline-block;width:30%">Stars</p>
			<p style="display:inline-block; width:30%"><span>Remaining: </span><span id="stars_remaining_count">14</span><img style="vertical-align:middle" src="star.png"></p>
		</div>
		<div style="clear: both;text-align:center"><button style="background-color: #3ecf8e; background: linear-gradient(#3eef8e,#3ecf8e); color: white; border-radius: 0.5em; box-shadow: 0px 4px 6px #aaaaaa; border: none; font-size:3.5em;padding:.5em;margin-top: 0.2em" onclick="setupNewGame()">Start a new game</button></div>
	</div>

</div>
</body>
<script>
		answer = null;
		selectedDiv = null;
		selectedUnderscore = null;
		gradientSteps = null;
		endsColoredBool = {};
		endsColors = {};
		webWorker = null;
		startTime = null;
		lastTime = 0;
		intervalID = null;
		timeoutID = null;
		totalStarCount = 0;
		starsRemaining = 144;
		previousMinute = 0;
		xhttp = new XMLHttpRequest();
		counterU = 0;
		canvas = null, ctx = null;
		imageData = null;
		correctLetters = [];
		similarLettersLowerCase = {"a": "egqd", "b": "hdgopq", "c": "eouvhy", "d": "bpqgh", "e": "agqd", "f": "ktji", "g":"abdopq", "h":"bdkrv", "i":"ljt", "j":"ilt", "k":"bdepx", "l": "ijt", "m": "nwuv", "n": "muwv", "o":"bqpcd", "p": "bdgce", "q": "pbde", "r":"nuh", "s":"czg", "t": "ijlfk", "u": "vnyhc", "v": "unyc", "w": "mnhuv", "x": "kwmyz", "y": "zvukh", "z":"snum"};
		similarLettersUpperCase = {"A": "VYUH", "B": "KEPRFX", "C": "GOQD", "D": "CGOQ", "E": "KBPRFX", "F" : "KBEPRX", "G":"COQD", "H":"ITLJA", "I":"HTLJ", "J":"HITL", "K":"BEPRFX", "L":"HITJ", "M":"NWUHE", "N": "MWUHE", "O": "CGQD", "P": "KBERFX", "Q":"GCDO", "R": "KBEPFX", "S" : "ZCBE", "T": "HILJ", "U": "AVYH", "V" : "AYUN", "W" : "YMNE", "X" : "BEKZS", "Y":"VUNH", "Z" : "SNMUXK"};


		function setupNewGame() {
			answer = null;
			selectedDiv = null;
			selectedUnderscore = null;
			gradientSteps = null;
			endsColoredBool = {};
			endsColors = {};
			if (!!webWorker) webWorker.terminate();
			webWorker = null;
			startTime = null;
			lastTime = 0;
			clearInterval(intervalID);
			intervalID = null;
			clearTimeout(timeoutID);
			timeoutID = null;
			totalStarCount = 0;
			starsRemaining = 144;
			previousMinute = 0;
			counterU = 0;
			correctLetters = [];
			var end1 = document.getElementById("end1");
			end1.style.backgroundColor = "white";
			var end2 = document.getElementById("end2");
			end2.style.backgroundColor = "white";
			var palette = document.getElementById("palette");
			while(!!palette.firstChild) palette.removeChild(palette.firstChild);
			var answer = document.getElementById("answer");
			answer.style.backgroundColor = "#eef0f6";
			var guess = document.getElementById("guess");
			guess.style.backgroundImage = "url('transparent_background.jpg')";
			var timer = document.getElementById("timer");
			var stars_remaining = document.getElementById("stars_remaining_count");  
			stars_remaining.innerHTML = "14";
			var stars_earned = document.getElementById("stars_count");  
			stars_earned.innerHTML = "0";
			var messageContainer = document.getElementById("overlayMessageContainer"); 
			var messageSpan = document.getElementById("overlayMessageSpan");
			messageSpan.innerHTML = "";
			messageContainer.style.display = "none";
			timer.style.display = "none";
			timer.innerHTML = "0:00";
			timer.style.display = "block";
			xhttp.abort();
			getGame();
		}

		function getGame() {
			var csrfTok = document.querySelector("meta[name='csrf-token']").getAttribute("content");
			xhttp.open("POST", "/games");
			xhttp.setRequestHeader('X-CSRF-Token', csrfTok)
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					answer = JSON.parse(this.responseText);
					console.log(answer);
					//gradientSteps = answerRes.gradientSteps;
					console.log("the answer palette choices are:");
					console.log(answer.correctPair);
					for (var i = 0; i < answer.correctPair.length; i++) {
						endsColors[eval("'end'+(i+1)")] = null;
					}
					colorAnswerDiv(answer);
					createPalette(answer);
					setupTimer();
				} // end if
			} // end onreadystatechange
			xhttp.send();
		} // end function getGame()

		function createPalette(ans) {
			var palette = document.getElementById("palette");
			//colorsArr = ans.mixedUpEnds;
			colorsArr = ans.allColors;
			var frag = document.createDocumentFragment();
			for (var i = 0; i < colorsArr.length; i++) {
				var divTempOuter = document.createElement('div');
				divTempOuter.style.display = "inline-block";
				for (var j = 0; j < colorsArr[i].length; j++) {
					var divTemp = document.createElement('div');
					divTemp.style.width = "100px";
					divTemp.style.height = "100px";
					divTemp.style.border = "1px solid gray";
					divTemp.style.display = "block";
					divTemp.style.marginRight = "0.2em";
					divTemp.style.backgroundColor = colorsArr[i][j];
					divTemp.id = "colors"+i+j+":"+colorsArr[i][j];
					divTemp.onclick = function() {selectColorForEnd(this);}
					divTempOuter.appendChild(divTemp);
				} // end for (var j = 0; j < colorsArr[i].length; j++) {
				frag.appendChild(divTempOuter);
			} // end for (var i = 0; i < colorsArr.length; i++) {
			palette.style.display = "none";
			while(!!palette.firstChild) palette.removeChild(palette.firstChild);
			palette.appendChild(frag);
			palette.style.display = "block";
		}

		function colorAnswerDiv(ans) {
			answerDiv = document.getElementById("answer");
			answerDiv.style.display = "none";
			answerDiv.style.backgroundColor = ans.correctMixedColor;
			answerDiv.style.display = "block";
		}

		function makeSelectedDiv(divS) {
			var container = document.getElementById("endsPaletteContainer");
			container.style.display = "block";
			if (!selectedDiv) {
				selectedDiv = divS;
				divS.style.border = "5px solid black";
			}
			else if (selectedDiv === divS) {
				selectedDiv = null;
				divS.style.border = "1px solid gray";
				container.style.display = "none";
			}
			else {
				selectedDiv.style.border = "1px solid gray";
				selectedDiv = divS;
				divS.style.border = "5px solid black";
			}
			
		} // end function makeSelectedDiv(divS)

		function selectColorForEnd(choice) {
			var container = document.getElementById("endsPaletteContainer");
			var bkColor = choice.id.split(":")[1];
			if (!!selectedDiv && starsRemaining >= 2) {
				selectedDiv.style.backgroundColor = bkColor;
				selectedDiv.style.border = "1px solid gray";
				endsColoredBool[selectedDiv.id] = true;
				endsColors[selectedDiv.id] = bkColor;
				selectedDiv = null;
				if (endsColoredBool["end1"] && endsColoredBool["end2"]) createInBetweenColor();
				container.style.display = "none";
				loseStars(2);
				return true;
			}
			container.style.display = "none";
			return false;
		} // end function selectColorForEnd(choice)

		function createInBetweenColor() {
			console.log("started test");
			end1 = document.getElementById("end1");
			end2 = document.getElementById("end2");
			color1 = getRGBComponents(end1.style.backgroundColor);
			color2 = getRGBComponents(end2.style.backgroundColor);
			//color1hex = getHexFromRGB(color1);
			// color2hex = getHexFromRGB(color2);
			var color1hex = endsColors["end1"], color2hex = endsColors["end2"];
			console.log(color1);
			console.log(color1hex);
			var hex;
			if ( ((color1hex.toUpperCase() == answer.correctPair[0].toUpperCase()) && (color2hex.toUpperCase() == answer.correctPair[1].toUpperCase())) || ((color1hex.toUpperCase() == answer.correctPair[1].toUpperCase()) && (color2hex.toUpperCase() == answer.correctPair[0].toUpperCase())) ) 
				{console.log("did pre-check");hex = answer.correctMixedColor;}
			else {
				alpha = 0.5;
				var slice = [];
				slice[0] = Math.floor(color1[0] * alpha + (1-alpha) * color2[0]);
				slice[1] = Math.floor(color1[1] * alpha + (1-alpha) * color2[1]);
				slice[2] = Math.floor(color1[2] * alpha + (1-alpha) * color2[2]);
				hex = getHexFromRGB([slice[0],slice[1],slice[2]])
			}
			return checkGuess(hex);
		} // end function createGradient(steps)

		function getRGBComponents(color) {
			color = color.replace("rgb(","");
			color = color.replace(")","");
			var colorArr = color.split(",");
			return colorArr;
		} // end function getRGBComponents(color)

		function getHexFromRGB(rgb) {
				var slice = [];
				slice.push(parseInt(rgb[0]));
				slice.push(parseInt(rgb[1]));
				slice.push(parseInt(rgb[2]));
				slice[0] = parseInt(slice[0]).toString(16);
				if (slice[0].length == 1) slice[0] = "0" + slice[0];
				slice[1] = parseInt(slice[1]).toString(16);
				if (slice[1].length == 1) slice[1] = "0" + slice[1];
				slice[2] = parseInt(slice[2]).toString(16);
				if (slice[2].length == 1) slice[2] = "0" + slice[2];
				var hex = "#" +  slice[0] + slice[1] + slice[2];
				return hex
		} // end function getHexFromRGB(rgb)


		function checkGuess(col) {
			color = col;
			var messageContainer = document.getElementById("overlayMessageContainer");
			var messageSpan = document.getElementById("overlayMessageSpan");
			guessDiv = document.getElementById("guess");
			guessDiv.style.backgroundColor = color
			guessDiv.style.backgroundImage = "none";
			guessDiv.style.boxShadow = "none";
			answer1 = answer.correctMixedColor;
			console.log("this is answer: " + answer1 + " and this is your guess: "+ color)
			//if ((answer1.toUpperCase() === color.toUpperCase()) || getVarianceBetweenHexColors(answer1,color,0.95)) 
			if ( answer1.toUpperCase() === color.toUpperCase() )  {if (!!webWorker) webWorker.terminate(); else clearInterval(intervalID); messageContainer.style.display = "none"; messageSpan.innerHTML = "YOU WON!!!"; messageContainer.style.display = "block"; createCanvasWithLetters();}
			return true;
		} // end function checkGuess(col)
	
		function setupTimer() {
			if (!!window.Worker) {
				if (!webWorker) {webWorker = new window.Worker("timer.js"); webWorker.onmessage = function(evt) {updateTimer(evt.data);} }
			} // end if (!!window.Worker)
			else {
				clearInterval(intervalID);
				intervalID = setInterval(function() {updateTimer(null)},333);
			} // end else
		} // end function setupTimer()

		function updateTimer(time) {
			timerEl = document.getElementById("timer");
			var time = time;
			if (!time) {
				var d = new Date();
				time = d.getTime();
			} // end if (!time)
			if (!startTime) startTime = time;
			if (time < lastTime) alert("Don't cheat!");
			else {
				var timeDiff = time - startTime;
				var timeDiffInSec = Math.floor(timeDiff / 1000);
				var minutes = Math.floor(timeDiffInSec / 60);
				var seconds = timeDiffInSec % 60;
				var displayTime = minutes.toString() + ":" + ((seconds < 10) ? ("0" + seconds.toString()) : seconds.toString());
				if (minutes != previousMinute) { previousMinute = minutes; loseStars(1);  }
				timerEl.style.display = "none";
				timerEl.innerHTML = displayTime;
				timerEl.style.display = "block";
			} // end else
		} // end function updateTimer(time)

		function loseStars(decreaseBy) {
			var stars_remaining = document.getElementById("stars_remaining_count"); 
			starsRemaining -= decreaseBy; 
			stars_remaining.innerHTML = starsRemaining;
			if (decreaseBy == 1) {
				var messageContainer = document.getElementById("overlayMessageContainer"); 
				var messageSpan = document.getElementById("overlayMessageSpan"); 
				if (starsRemaining < 1) {if (!!webWorker) webWorker.terminate(); clearInterval(intervalID);clearTimeout(timeoutID);messageSpan.innerHTML="Game Over";messageContainer.style.display="block";}
				else {
					messageSpan.innerHTML = "Just lost a star"; 
					messageContainer.style.display="block"; 
					setTimeout(function(){messageSpan.innerHTML = ""; messageContainer.style.display = "none";},2000);
				} // end else
			} // end if (decreaseBy == 1)
			return true;
		} // end function loseStars()

	
		function getVarianceBetweenHexColors(color1,color2,varianceAllowed) {
			var col1, col2, r, g, b, r1, r2, g1, g2, b1, b2, rless, rmore, gless, gmore, bless, bmore, variance = varianceAllowed;
			if (color1[0] == "#") col1 = color1.split("#")[1];
			else col1 = color1;
			if (color2[0] == "#") col2 = color2.split("#")[1];
			else col2 = color2;
			r1 = parseInt(col1.substr(0,2), 16); 
			r2 = parseInt(col2.substr(0,2), 16);
			g1 = parseInt(col1.substr(2,2), 16);
			g2 = parseInt(col2.substr(2,2), 16);
			b1 = parseInt(col1.substr(4,2), 16);
			b2 = parseInt(col2.substr(4,2), 16);
			if (r1 < r2) {rless = r1; rmore = r2}
			else {rless = r2; rmore = r1;}
			if (g1 < g2) {gless = g1; gmore = g2}
			else {gless = g2; gmore = g1;}
			if (b1 < b2) {bless = b1; bmore = b2}
			else {bless = b2; bmore = b1;}
			if ((rless/rmore) >= variance) r = true;
			if ((gless/gmore) >= variance) g = true;
			if ((bless/bmore) >= variance) b = true;
			if (r && g && b) return true;
			else return false;
		} // end function getVarianceBetweenHexColors(color1,color2,varianceAllowed)

		
		function letterObj(letter, cs, font, size, rotation, correct) {
			this.letter = letter;
			this.cs = cs;
			this.font = font;
			this.size = size;
			this.rotation = rotation;
			this.correct = (!!correct) ? correct : false;
		}



		function createCanvasWithLetters() {
			console.log("in colorCanvas");
			var messageContainer = document.getElementById("overlayMessageContainer");
			var scrollerWidth = messageContainer.offsetWidth;
			messageContainer.style.display = "none";
			canvas = document.getElementById("canvas1");
			canvas.style.display = "none";
			ctx = canvas.getContext('2d');
			var width = Math.floor(canvas.width);
			var height = Math.floor(canvas.height);
			var fontSz = Math.floor(width*(1/answer.letters.length));
			if (fontSz < 16) fontSz = 16;
			ctx.font = fontSz+"px Arial";
			ctx.textBaseline = "middle";
			ctx.textAlign = "center";
			ctx.fillStyle = answer.correctMixedColor;
			var letters = answer.letters;
			for (var i = 0; i < letters.length; i++) {
				var breakpoint;
				if (letters.length % 2 == 0) breakpoint = null;
				else if (letters.length %2 != 0) breakpoint = Math.ceil(letters.length/2);
				var angle = Math.random() * (Math.PI/4);
				if (Math.random() < 0.5) angle = 0-angle;
				ctx.translate(canvas.width/2, canvas.height/2);
				yShift = Math.floor(Math.random() * 3);
				if (yShift == 0) yShift = -0.5;
				else if (yShift == 1) yShift = 0;
				else if (yShift == 2) yShift = 0.5;
				if ( !breakpoint ) ctx.translate(-(letters.length/2-i)*fontSz*.75, yShift*fontSz);
				else if (!!breakpoint && (((i+1) < breakpoint) || ((i+1) > breakpoint))) ctx.translate(-(breakpoint-1-i)*fontSz*.75, yShift*fontSz);
				else if (!!breakpoint && ((i+1) == breakpoint)) ctx.translate(0, yShift*fontSz);
				//ctx.translate(-((letters.length-i)*fontSz*.75) ,yShift*fontSz);
				var charCode = letters[i].charCodeAt(0);
				var cs = "";
				if ( (charCode >= 65) && (charCode <= 90) ) cs = "upper";
				else if ( (charCode >= 97) && (charCode <= 122) ) cs = "lower";
				correctLetters.push(new letterObj(letters[i], cs, "Arial", fontSz, angle, true));
				ctx.rotate(angle);
				ctx.fillText(letters[i],0,0);
				ctx.setTransform(1,0,0,1,0,0);
			} // end for (var i = 0; i < width; i++)
			canvas.style.display = "block";
			document.getElementById("timer").style.display = "none";
			var scroller = document.getElementById("customScroll");
			scroller.style.width = scrollerWidth + "px";
			var direction = ["vertical", "horizontal"];
			var lineList = [];
			for (var i = 0; i < 100; i++) {
				var numOfLines = Math.floor( Math.random() * 2 ) + 2;
				numOfLines = 1;
				var tempArray = [];
				tempArray.push(numOfLines);
				//var directionTemp = direction[Math.floor(Math.random() * 2)];
				if (i < 50 ) directionTemp = "vertical";
				else if (i >=50 ) directionTemp = "horizontal";
				for (var j = 0; j < numOfLines; j++) {
					var pos;
					if (directionTemp == "vertical") pos = i*(Math.floor(width/50)); //pos = Math.floor( Math.random() * (height+1) );
					else if (directionTemp == "horizontal") pos = (i-50)*(Math.floor(height/50)); //pos = Math.floor(Math.random() * (width+1) );
					tempArray.push([directionTemp, pos]);
				}
				lineList.push(tempArray);
			}
			console.log(lineList);
			imageData = ctx.getImageData(0,0,canvas.width,canvas.height);
			var gameLD = document.getElementById("gameLettersDiv");
			var frag = document.createDocumentFragment();
			for (var i = 0; i < letters.length; i++) {
				var tempLetterChoicesDiv = document.createElement("div");
				tempLetterChoicesDiv.id = "letterChoices" + i;
				tempLetterChoicesDiv.style.width = "100%";
				tempLetterChoicesDiv.style.height = "50%";
				tempLetterChoicesDiv.style.background = "gray";
				tempLetterChoicesDiv.style.display = "none";
				var container = document.getElementById("letterChoicesCont");
				container.appendChild(tempLetterChoicesDiv);
				var tempDiv = document.createElement("div");
				tempDiv.style.borderBottom = "2px solid gray";
				tempDiv.style.display = "inline-block";
				tempDiv.style.width = (fontSz+2)+"px";
				tempDiv.style.height = (fontSz+2)+"px";
				tempDiv.style.margin = "2px";
				tempDiv.id = "letterBox:"+i;
				tempDiv.onclick = function() {if (!!selectedUnderscore) {selectedUnderscore.style.borderBottom = "2px solid gray";}; this.style.borderBottom="5px solid gray"; selectedUnderscore = this; showLetterChoices(this.id.split(":")[1]);}
				frag.appendChild(tempDiv);
			}
			gameLD.appendChild(frag);
			gameLD.style.display = "block";
			scroller.oninput = function() {ctx.putImageData(imageData,0,0); counterU = this.value; drawLines(lineList, counterU, imageData);}
		} // end function createCanvasWithLetters()

		function drawLines(lineList, ind, imageData) {
			canvas.style.display = "none";
			ctx.globalCompositeOperation = "exclusion";
			ctx.fillStyle = "white";
			ctx.setTransform(1,0,0,1,0,0);
			var lineL = lineList[ind];
			for (var i = 1; i < lineL[0]+1; i++) {
				var end;
				if (lineL[i][0] == "horizontal") { 
					end = Math.floor(canvas.width);
					for (var j = 0; j < end; j++) ctx.fillRect(j,lineL[i][1],1,1);
				}
				else if (lineL[i][0] == "vertical") {
					end = Math.floor(canvas.height);
					for (var j = 0; j < end; j++) ctx.fillRect(lineL[i][1],j,1,1);
				}
			}
			canvas.style.display = "block";
			return true;
		}

		function showLetterChoices(ind) {
			var frag = document.createDocumentFragment();
			var useTheseLetters = [];
			var cl = correctLetters[ind];
			var letterBlock = "";
			if (cl.cs == "upper") letterBlock = similarLettersUpperCase[cl.letter];
			else if (cl.cs == "lower") letterBlock = similarLettersLowerCase[cl.letter];
			useTheseLetters.push(cl);
			var rotation;
			for (var i = 0; i < 4; i++) {
				rotation = Math.random() * (Math.PI/4);
				if ( cl.rotation < 0 ) rotation = -rotation;
				useTheseLetters.push(new letterObj(letterBlock[Math.floor(Math.random()*letterBlock.length)], cl.cs, cl.font, cl.size, rotation ,false));
			}
			for (var i = 0; i  < useTheseLetters.length; i++) {
				angle = useTheseLetters[i].rotation * (180/Math.PI);
				var elP = document.createElement("p");
				elP.style.textAlign = "center";
				elP.style.display = "inline-block";
				elP.style.margin = "auto";
				elP.style.fontFamily = useTheseLetters[i].font;
				elP.style.fontSize = cl.size + "px";
				elP.style.webkitTransform = "rotate("+angle+"deg)";
				elP.style.WebkitTransform = "rotate("+angle+"deg)";
				elP.style.mozTransform = "rotate("+angle+"deg)";
				elP.style.MozTransform = "rotate("+angle+"deg)";
				elP.style.msTransform = "rotate("+angle+"deg)";
				elP.style.oTransform = "rotate("+angle+"deg)";
				elP.style.OTransform = "rotate("+angle+"deg)";
				elP.style.transform = "rotate("+angle+"deg)";
				var t = document.createTextNode(useTheseLetters[i].letter);
				elP.appendChild(t);
				var div = document.createElement("div");
				div.style.border = "3px solid ghostwhite";
				div.style.textAlign = "center";
				div.style.width = (cl.size+Math.floor(cl.size/4))+"px";
				div.style.height = (cl.size+Math.floor(cl.size/4))+"px";
				div.style.display = "inline-block";
				div.style.margin = "auto";
				div.style.lineHeight = (cl.size+Math.floor(cl.size/4))+"px";
				div.style.verticalAlign = "middle";
				div.style.boxShadow = "-2px 1px 2px lightgray";
				div.style.background = "lightblue";
				div.style.borderRadius = "0.4em";
				div.onclick = function(){selectLetter(this);}
				div.appendChild(elP);
				frag.appendChild(div);
			}
			for (var i = 0 ; i < answer.letters.length; i++) {
				document.getElementById("letterChoices"+i).style.display = "none";
			}
			var el = document.getElementById("letterChoices"+ind);
			while (!!el.lastChild) el.removeChild(el.lastChild);
			el.appendChild(frag);
			el.style.display = "block";
			// var palette = document.getElementById("palette");
			// palette.appendChild(frag);
			// var palCont = document.getElementById("endsPaletteContainer");
			// palCont.style.display = "block";


		} // end function showLetterChoices(i) 

		function selectLetter(letter){
			letter.onclick = function() {if (!!selectedUnderscore) {selectedUnderscore.style.borderBottom = "2px solid gray";}; selectedUnderscore = this; showLetterChoices(this.id.split(":")[1]);}
			var par = selectedUnderscore.parentNode;
			par.replaceChild(letter, selectedUnderscore);
		}

		function showLetters() {
			var arr = [];
			var arr2 = [];
			for (var i = 0; i < canvas.height; i++) {
				arr.push(i);
				arr2.push("*");
			}
			var pos;
			var end = Math.floor(canvas.height/2);
			for (var i = 0; i < end ; i++) {
				pos = arr.pop();
				var ind = Math.floor(Math.random()*canvas.height);
				if (arr2[ind] == "*") arr2[ind] = pos;
				else {
					while (arr2[ind] != "*") ind = Math.floor(Math.random()*canvas.height);
					arr2[ind] = pos;
				}				
			}			
			while (arr.length > 0) {
				pos = arr.pop();
				for (var i = 0; i < canvas.height; i++) {if (arr2[i] == "*") {arr2[i] = pos; break;}}
			}
			setTimeout(function() {showL(arr2, 0)}, 100);
		} // end function showLetters()

		function showL(arr, counter) {
			ctx.fillRect(0,arr[counter],canvas.width,3);
			counter++;
			if (counter < (canvas.height-1)) setTimeout(function() {showL(arr, counter)}, 100);
		}


/*								ctx.clearRect(0,0, canvas.width, canvas.height);
						ctx.fillStyle = "black";
						ctx.fillRect(j,i,1,1);*/

	</script>	
</html>

